/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    output reg [23:0] io_led,
    input [7:0] io_dip,
    input [5:0] write_addr,
    input [15:0] write_data,
    input werf
  );
  
  
  
  reg rst;
  
  wire [16-1:0] M_data_mem_read_data;
  data_memory_1 data_mem (
    .waddr(write_addr),
    .write_data(write_data),
    .write_en(werf),
    .raddr(io_dip[0+5-:6]),
    .wclk(clk),
    .read_data(M_data_mem_read_data)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_2 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    usb_tx = usb_rx;
    led = 8'h00;
    io_led[0+6+1-:2] = 2'h0;
    io_led[0+0+5-:6] = io_dip[0+5-:6];
    io_led[16+7-:8] = M_data_mem_read_data[8+7-:8];
    io_led[8+7-:8] = M_data_mem_read_data[0+7-:8];
  end
endmodule
